module Game.Generate exposing (..)

import Game exposing (Game)
import Stage


fromId : Int -> Maybe Game
fromId stageId =
    case stageId of
        6 ->
            Stage.parse
                [ "â¬›â¬›â¬›â¬›ðŸ”˜â¬›"
                , "ðŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œðŸŸ¥"
                , "â¬›ðŸ”˜â¬›â¬›â¬›â¬›"
                ]
                |> Game.fromStage { level = 2 }
                |> Just

        5 ->
            Stage.parse
                [ "â¬›ðŸŸ¥â¬›â¬›ðŸ”˜â¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œðŸ”˜"
                , "â¬›ðŸŸ¥â¬›â¬›â¬›â¬›"
                ]
                |> Game.fromStage { level = 2 }
                |> Just

        4 ->
            Stage.parse
                [ "â¬›ðŸŸ¥â¬›â¬›ðŸŸ¥â¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "ðŸ”˜â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬›â¬›â¬›ðŸ”˜â¬›"
                ]
                |> Game.fromStage { level = 2 }
                |> Just

        3 ->
            Stage.parse
                [ "â¬›â¬›â¬›â¬›ðŸŸ¥â¬›"
                , "ðŸŸ¥â¬œâ¬œâ¬œâ¬œðŸ”˜"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "ðŸ”˜â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›ðŸ”˜â¬›â¬›ðŸŸ¥â¬›"
                ]
                |> Game.fromStage { level = 1 }
                |> Just

        2 ->
            Stage.parse
                [ "â¬›ðŸŸ¥â¬›â¬›ðŸŸ¥â¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œðŸ”˜"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "ðŸŸ¥â¬œâ¬œâ¬œâ¬œðŸ”˜"
                , "â¬›ðŸ”˜â¬›â¬›â¬›â¬›"
                ]
                |> Game.fromStage { level = 1 }
                |> Just

        1 ->
            Stage.parse
                [ "â¬›ðŸ”˜â¬›â¬›ðŸŸ¥â¬›"
                , "ðŸŸ¥â¬œâ¬œâ¬œâ¬œðŸ”˜"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›â¬œâ¬œâ¬œâ¬œâ¬›"
                , "ðŸ”˜â¬œâ¬œâ¬œâ¬œâ¬›"
                , "â¬›ðŸŸ¥â¬›â¬›â¬›â¬›"
                ]
                |> Game.fromStage { level = 1 }
                |> Just

        _ ->
            Nothing
